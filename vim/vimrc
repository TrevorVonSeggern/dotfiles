set runtimepath+=$XDG_CONFIG_HOME/vim,$XDG_CONFIG_HOME/vim/after,$VIM,$VIMRUNTIME
set directory=$XDG_CACHE_HOME/vim/swap,/tmp
set undodir=$XDG_CACHE_HOME/vim/undo,/tmp
set backupdir=$XDG_CACHE_HOME/vim/backup,/tmp
set viminfo+=n$XDG_CACHE_HOME/vim/viminfo
if !has('nvim')
  set viminfo+=n~/.local/share/vim/viminfo
endif

set nocompatible
filetype indent plugin on

runtime plugins.vim

call plug#begin('$XDG_DATA_HOME/vim/plugged')
" Ui
"Plug 'flazz/vim-colorschemes' " so many colors!
Plug 'chriskempson/base16-vim'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" base editor stuff
Plug 'editorconfig/editorconfig-vim' " respect .editorconfig
Plug 'preservim/nerdcommenter' " this is for commenting lines.
Plug 'scrooloose/nerdtree'
Plug 'mbbill/undotree'
Plug 'junegunn/fzf.vim' " definitely need both fzf plugs. Not actually duplicate fzf installs.
Plug 'junegunn/fzf', { 'dir': '$XDG_CACHE_HOME/vim/fzf', 'do': './install --all' }
Plug 'gioele/vim-autoswap' " because swap files get in the way.

" Plug 'ajh17/vimcompletesme' " alternatives => supertab, youcompleteme. Not
" needed with coc.
Plug 'tpope/vim-fugitive' " git

" Language agnostic plugins
if has('nvim')
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
else
  Plug 'Shougo/deoplete.nvim'
  Plug 'roxma/nvim-yarp'
  Plug 'roxma/vim-hug-neovim-rpc'
endif
Plug 'sheerun/vim-polyglot'
Plug 'w0rp/ale' " linter. It is a client for language servers.

" Language specific plugins
Plug 'OmniSharp/omnisharp-vim' " dotnet
Plug 'mattn/emmet-vim' " Html
Plug 'ekalinin/Dockerfile.vim' " dockerfile

" Angular
Plug 'leafgarland/typescript-vim'

call plug#end()

" for some reason ui needs to be loaded after...
runtime sets.vim

let g:deoplete#enable_at_startup = 1

" ale settings
let g:ale_fix_on_save = 1
let g:ale_sign_column_always = 1 " keeps the gutter on the left open always.
let g:ale_fixers = {
\   '*': ['remove_trailing_lines', 'trim_whitespace']
\}
